# Note workshop Flutter : 

Bonjour à tous merci de votre participation. 
Aujourd’hui nous allons faire une rapide présentation de Flutter ainsi qu’un exercice pour vous montrer comment fonctionne ce framework. 

Avant tout, qu’est ce que Flutter ? (SLIDE 2) :

Flutter est un SDK (ou kit de développement) open source poussé par google. C’est une solution construire en C, C++ et Dart . 
L’architecture est très proche de react , nous verrons après pourquoi. 
Le langage de programmation pour le flutter est le dart. 

SLIDE 3 : DATE :

La première version de flutter est sorti en 2015 sous le nom de Sky, mais la première release de flutter officiel 1.0 est le 4 décembre 2018.

Le site web qui recense les librairies et les package pour Dart et flutter est : [Dart packages](https://pub.dev)

SLIDE 4: A QUOI CA SERT : 

Créer une application native et cross plateforme (iOS, Android, “web”) à partir d’un même code, ce qui permet évidemment un gain de temps énorme pour les projets mobile et réduits les coûts dans les entreprises. 

SLIDE 5 : AVANTAGE :

Ici quelques exemples des avantages à utiliser flutter, nous reviendrons sur certains d’entre plus en détails par la suite. 

SLIDE 6 RESSEMBLANCE : 

Flutter est très proche de React Native car un seul code s’interface avec deux systèmes d’exploitations. C’est donc l’OS qui affiche le contenu.

SLIDE 7 FONCTIONNEMENT : 

Flutter fonctionne avec des widgets qui sont indépendants de l’équipement et de l’utilisateur.
Flutter dessine sa propre interface, indépendamment du système d’exploitation, ce qui permet également un gain en fps et en performance de l’	application.
Ainsi donc il est possible de faire des rendus style iOS sur android et inversement et permet un rendu plus structurel. 

SLIDE 8 :  WIDGETS 

Les applications et les fonctionnalités en flutter sont composés de widgets, ce qui permet de découper les applications en plusieurs parties.
C’est un système inspiré de react, qui décrit ce à quoi la vue devrait ressembler étant donné sa configuration et son état. 
Toute l’UI est composée de widgets .

SLIDE 9 : LES IDE recommandés : 

Les éditeurs de textes recommandés sont Android studio, IntelliJ IDEA et Visual Studio code. Ils ont l’avantages d’offrir des plugins dédiés au développement en flutter et permet une compilation en mode debug des applications.

SLIDE 10 : LES CLI ESSENTIELLES 

Signifie interface en ligne de commande. Ici vous avez 4 exemples des commandes les plus utilisées en flutter. 
$Flutter doctor permet de savoir quelle version de flutter on utilise et permet de savoir si quelque chose ne marche pas sur votre SDK (si il y a un problème avec des packages etc).
$Flutter upgrade permet de télécharger la version la plus récente de flutter. 
$Flutter pub get est la commande vous permettant de télécharger les packages et dependecies nécessaire à votre appli. 
$Flutter analyze est un outil de debug au même titre que le dart analyze tool qui est présent sur les IDE cités plus haut.

SLIDE 11 : HOT RELOAD 

Un des avantages de développer des applications avec flutter est le hot reload -> ce qu’on appel un Reload JIT (Just in Time)
Mise à jour de l’application en temps réel sans recompiler (injection du nouveau code dans la VM Dart à l’exécution) .
* C’est state full, c’est à dire que le contexte est conservé (Intéressant quand on debug un écran profond).

SLIDE 12 : WORKSHOP

Nous allons désormais passer au workshop flutter en commençant par installer le SDK pour ceux qui ne l’ont pas encore..
Nous allons ensuite créer une petite application de chronomètre que nous ferons compiler sur un simulateur iOS & Android 




